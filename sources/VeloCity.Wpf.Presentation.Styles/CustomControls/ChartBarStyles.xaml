<!--
VeloCity
Copyright (C) 2022-2023 Dust in the Wind

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:DustInTheWind.VeloCity.Wpf.Presentation.CustomControls;assembly=DustInTheWind.VeloCity.Wpf.Presentation.CustomControls"
    xmlns:converters="clr-namespace:DustInTheWind.VeloCity.Wpf.Presentation.CustomControls.Converters;assembly=DustInTheWind.VeloCity.Wpf.Presentation.CustomControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Pack://application:,,,/DustInTheWind.VeloCity.Wpf.Presentation.Styles;component/Skins/DarkSkin.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <converters:IntToGridLengthConverter x:Key="IntToGridLengthConverter" GridUnitType="Star" />

    <Style TargetType="{x:Type customControls:ChartBar}">

        <Setter Property="Orientation" Value="Horizontal" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ChartBar}">

                    <Grid>

                        <ContentControl x:Name="_Horizontal">

                            <Grid
                                Visibility="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"
                                HorizontalAlignment="Stretch">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Value.ActualFillValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                    <ColumnDefinition Width="{Binding Value.ActualEmptyValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                    <ColumnDefinition Width="{Binding Value.ActualEmptySpace, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                </Grid.ColumnDefinitions>

                                <Border
                                    Grid.Column="0"
                                    Background="LimeGreen"
                                    Height="3" />

                                <Border
                                    Grid.Column="1"
                                    Height="1"
                                    Background="#40F9F1A5" />

                                <Border
                                    Grid.Column="2" />

                            </Grid>
                        </ContentControl>

                        <ContentControl x:Name="_Vertical">

                            <Grid
                                Visibility="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"
                                VerticalAlignment="Stretch">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding Value.ActualEmptySpace, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                    <RowDefinition Height="{Binding Value.ActualEmptyValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                    <RowDefinition Height="{Binding Value.ActualFillValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IntToGridLengthConverter}}" />
                                </Grid.RowDefinitions>

                                <Border
                                    Grid.Row="0" />

                                <Border
                                    Grid.Row="1"
                                    Width="1"
                                    Background="#40F9F1A5" />

                                <Border
                                    Grid.Row="2"
                                    Background="LimeGreen"
                                    Width="3" />

                            </Grid>
                        </ContentControl>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="_Horizontal" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_Vertical" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="_Horizontal" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_Vertical" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <DataTrigger Binding="{TemplateBinding Orientation}" Value="Horizontal">
                <Setter TargetName="_Horizontal" Property="Visibility" Value="Visible" />
                <Setter TargetName="_Vertical" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{TemplateBinding Orientation}" Value="Vertical">
                <Setter TargetName="_Horizontal" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="_Vertical" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>-->

    </Style>

</ResourceDictionary>