<!--
VeloCity
Copyright (C) 2022 Dust in the Wind

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:DustInTheWind.VeloCity.Wpf.Presentation.CustomControls.Converters;assembly=DustInTheWind.VeloCity.Wpf.Presentation.CustomControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Pack://application:,,,/DustInTheWind.VeloCity.Wpf.Presentation.Styles;component/Skins/DarkSkin.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

    <SolidColorBrush x:Key="CheckBoxNormalBackgroundBrush" Color="{StaticResource PrimaryDarkColor}" />
    <SolidColorBrush x:Key="CheckBoxNormalForegroundBrush" Color="{StaticResource FontPrimaryColor}" />
    <SolidColorBrush x:Key="CheckBoxNormalBorderBrush" Color="{StaticResource FontDimColor}" />

    <SolidColorBrush x:Key="CheckBoxDisabledBackgroundBrush" Color="{StaticResource DisabledColor}" />
    <SolidColorBrush x:Key="CheckBoxDisabledForegroundBrush" Color="{StaticResource FontDisabledColor}" />
    <SolidColorBrush x:Key="CheckBoxDisabledBorderBrush" Color="{StaticResource DisabledColor}" />

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="OpenSans" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource CheckBoxNormalForegroundBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <Border Padding="{TemplateBinding Padding}">
                        <StackPanel
                            Orientation="Horizontal"
                            Background="Transparent">

                            <Grid>
                                <Path
                                    StrokeThickness="1"
                                    Stroke="{StaticResource FontDisabledBrush}"
                                    StrokeMiterLimit="4"
                                    SnapsToDevicePixels="False">

                                    <Path.Data>
                                        <RectangleGeometry
                                            Rect="0 0 16 16"
                                            RadiusX="1"
                                            RadiusY="1" />
                                    </Path.Data>

                                </Path>

                                <Path
                                    x:Name="PART_Check"
                                    StrokeThickness="2"
                                    Stroke="#ffffff"
                                    StrokeMiterLimit="4"
                                    StrokeLineJoin="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeEndLineCap="Round"
                                    SnapsToDevicePixels="False">

                                    <Path.Data>
                                        <PathGeometry
                                            Figures="m 3 8 3 3 6 -6"
                                            FillRule="EvenOdd" />
                                    </Path.Data>

                                </Path>
                            </Grid>


                            <ContentPresenter
                                x:Name="CheckBoxContent"
                                Margin="10 0 0 0"
                                VerticalAlignment="Center"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />

                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Check" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" Value="{StaticResource CheckBoxNormalBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxNormalBackgroundBrush}" />
                        </Trigger>

                        <!-- Unchecked -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="PART_Check" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxNormalBorderBrush}" />
                        </Trigger>

                        <!-- Checked and Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Check" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxDisabledForegroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource CheckBoxDisabledBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxDisabledBackgroundBrush}" />
                        </MultiTrigger>

                        <!-- Unchecked and Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Check" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxDisabledForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxDisabledBorderBrush}" />
                        </MultiTrigger>

                        <!-- MouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle">
            <Setter.Value>

                <Style TargetType="{x:Type Control}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Control}">

                                <Rectangle
                                    x:Name="PART_FocusRectangle"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Stroke="{StaticResource AccentBrush}"
                                    StrokeThickness=".7"
                                    StrokeDashArray="2 2" />

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>